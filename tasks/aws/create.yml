- name: Find AMI
  amazon.aws.ec2_ami_info:
    filters:
      name: "{{ botinstance_ami_filter_name | default(omit) }}"
      architecture: "{{ botinstance_ami_filter_architecture | default(omit) }}"
    owners: "{{ botinstance_ami_owners }}"
    region: "{{ botinstance_region }}"
  register: amis
  tags:
    - botinstance
    - always

- name: AWS | Create ssh keys
  amazon.aws.ec2_key:
    name: "{{ item.name }}"
    key_material: "{{ item.key_material }}"
    region: "{{ botinstance_region }}"
    state: "{{ item.state | default(omit) }}"
  loop: "{{ botinstance_ssh_keys }}"
  tags:
    - botinstance
    - ssh

- name: AWS | Create security group
  amazon.aws.ec2_group:
    description: "Ports for bot"
    name: "{{ botinstance_security_group_name }}"
    region: "{{ botinstance_region }}"
    rules: "{{ botinstance_security_group_rules }}"
    rules_egress: "{{ botinstance_security_group_rules_egress }}"
    state: "{{ botinstance_state | default(omit) }}"
  register: _security_group
  tags:
    - botinstance
    - security_group

- name: AWS | Create instance
  community.aws.ec2_instance:
    name: "{{ botinstance_name }}"
    image_id: "{{ (amis.images | last)['image_id']  }}"
    security_group: "{{ botinstance_security_group_name }}"
    instance_type: "{{ botinstance_type }}"
    key_name: "{{ botinstance_ssh_keys[0].name }}"
    region: "{{ botinstance_region }}"
    termination_protection: yes
    wait: yes
    volumes:
      - device_name: /dev/sda1
        ebs:
          delete_on_termination: yes
          volume_type: gp2
          volume_size: "{{ botinstance_volume_size }}"
  register: ec2_instances
  tags:
    - botinstance
    - instance
    - dns

- name: AWS | Allocate elastic IP
  community.aws.ec2_eip:
    device_id: "{{ ec2_instances.instances[0].instance_id }}"
    in_vpc: yes
    region: "{{ botinstance_region }}"
    release_on_disassociation: yes
    state: present
    reuse_existing_ip_allowed: yes
  register: elastic_ip
  tags:
    - botinstance
    - dns

- name: AWS | Create route 53 entries
  community.aws.route53:
    state: "{{ item.state | default('present') }}"
    zone: "{{ botinstance_dns_zone }}"
    overwrite: yes
    record: "{{ item.record }}"
    ttl: "{{ item.ttl | default('300') }}"
    type: "{{ item.type }}"
    value: "{{ item.value | default(omit) }}"
  loop: "{{ botinstance_dns_entries }}"
  tags:
    - dns
    - botinstance

- name: Wait for instance
  wait_for:
    host: "{{ elastic_ip.public_ip }}"
    port: 22
    delay: 30
    search_regex: OpenSSH
  tags:
    - botinstance
